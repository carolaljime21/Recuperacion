import play.api.libs.json.{Json, _}
import scala.util.{Failure, Success, Try}
import com.github.tototoshi.csv._
import java.io.File
import requests.Response
import scalikejdbc._
import generarSQL.escapeMysql
import java.nio.charset.StandardCharsets
import java.nio.file.{Files, Paths, StandardOpenOption}

object tabSpokenLanguage extends App {

  Class.forName("com.mysql.cj.jdbc.Driver")
  ConnectionPool.singleton("jdbc:mysql://localhost:3306/practica", "root", "Carol210504")
  implicit val session = AutoSession


  val movID = sql"""SELECT m.id FROM movie m
                   INNER JOIN language l ON m.original_language = l.iso"""
      .map(rs => rs.int("id")).list.apply()

  val lanID =
    sql"""SELECT l.id FROM movie m
                   INNER JOIN language l ON m.original_language = l.iso"""
      .map(rs => rs.int("id")).list.apply()

  val spokLanData = movID.zip(lanID)

  spokLanData.foreach {
    spokenL =>
      sql"""INSERT INTO spoken_language (mov_id, lan_id)
        VALUES (${spokenL._1}, ${spokenL._2})
        """.stripMargin.update.apply()

  }

  //LENADO POR SCRIPT
  val SQL_INSERT_PATTERN =
    """INSERT INTO SPOKEN_LANGUAGE (`mov_id`,`lan_id`)
      |VALUES
      |'%d', '%d');
      |"""
      .stripMargin

  val scriptData = spokLanData
    .map(movie => SQL_INSERT_PATTERN.formatLocal(java.util.Locale.US,
      movie._1,
      movie._2
    ))

  val scriptFile = new File("src/scripts/language.sql")
  if (scriptFile.exists()) scriptFile.delete()
  scriptData.foreach(insert =>
    Files.write(Paths.get("src/scripts/language.sql")
      , insert.getBytes(StandardCharsets.UTF_8)
      , StandardOpenOption.CREATE, StandardOpenOption.APPEND)
  )

}
